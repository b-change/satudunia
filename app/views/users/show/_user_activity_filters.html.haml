/ %span{:class => "my_pr2"}
/   = number_with_delimiter(@resources.total_count)
/   = t(:activities, :scope => "activerecord.models")
/   \-
/   = t('global.filter_by')

/ %li.all
/ 	= link_to "All", activity_user_path(@user, params.merge(:sort=>"all")), :rel => "nofollow", :class => "pjax", :"data-layout" => "index", :id=>"all-tab"
/ %li.questions
/ 	= link_to "Questions", activity_user_path(@user, params.merge(:sort=>"questions")), :rel => "nofollow", :class => "pjax", :"data-layout" => "index", :id=>"question1-tab"
/ %li.answers
/ 	= link_to "Answers", activity_user_path(@user, params.merge(:sort=>"answers")), :rel => "nofollow", :class => "pjax", :"data-layout" => "answers", :id=>"answer-tab"
/ %li.users
/ 	= link_to "Users", activity_user_path(@user, params.merge(:sort=>"users")), :rel => "nofollow", :class => "pjax", :"data-layout" => "index", :id=>"user-tab"
/ %li.users
/ 	= link_to "Pages", activity_user_path(@user, params.merge(:sort=>"pages")), :rel => "nofollow", :class => "pjax", :"data-layout" => "index", :id=>"page-tab"
%li#activity-filter-select.last
	%label{:for => "activity-filter-by"} Show:
	%select#activity-filter-by
		%option{:value => "all"} All
		%option{:value => "questions"} Questions
		%option{:value => "answers"} Answers
		%option{:value => "users"} Users
		%option{:value => "pages"} Pages

:javascript
	
	jQuery(document).ready(function(jQ){

		jQ("#activity-filter-by").change(function(){
			valueTaker= jQuery("#activity-filter-by").val();
			jQuery.ajax({     
				url:"#{activity_user_path(@user.id)}",
				data: { tab: valueTaker},
				dataType:"script",				
				success:function(successObject){
					jQuery(".loader").removeClass("ajax-loader");
				}
			});
		})

		jQ('#pagination-digg  a').live('click',function(e){
			e.preventDefault();
			jQuery.ajax({url:jQ(this).attr('href'),dataType:"script"})
		})
	})